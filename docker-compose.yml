# Version of docker-compose
version: '3'

# Containers we are going to run
services:
  # Our Phoenix container
  api:
    # The build parameters for this container.
    build: 
      context: api/
    environment:
      # Variables to connect to our Postgres server
      PGUSER: 'postgres'
      PGPASSWORD: 'postgres'
      PGDATABASE: 'api_database'
      PGPORT: 5432
      # Hostname of our Postgres container
      PGHOST: db
      RABBITHOST: rabbitmq
      PORT: 4000
    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - 4000:4000
    volumes:
      - ./api:/app
      - /app/_build
      - /app/deps
    depends_on:
      # The db container needs to be started before we start this container
      - db
      - rabbitmq
    command: sh ./script.sh
    networks:
      - app-tier
  microservice_1:
    # The build parameters for this container.
    build: 
      context: microservice_1/
    environment:
      # Variables to connect to our Postgres server
      PGUSER: 'postgres'
      PGPASSWORD: 'postgres'
      PGDATABASE: 'api_database'
      PGPORT: 5432
      # Hostname of our Postgres container
      PGHOST: db

      RABBITHOST: rabbitmq
      PORT: 4000
    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - 4001:4000
    volumes:
      - ./microservice_1/:/app
      - /app/_build
      - /app/deps
    depends_on:
      # The db container needs to be started before we start this container
      - db
      - rabbitmq
    command: sh ./script.sh
    networks:
      - app-tier
  microservice_2:
    # The build parameters for this container.
    build: 
      context: microservice_2/
    environment:
      # Variables to connect to our Postgres server
      PGUSER: 'postgres'
      PGPASSWORD: 'postgres'
      PGDATABASE: 'api_database'
      PGPORT: 5432
      # Hostname of our Postgres container
      PGHOST: db
      RABBITHOST: rabbitmq
      PORT: 4000
    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - 4002:4000
    volumes:
      - ./microservice_2/:/app
      - /app/_build
      - /app/deps
    depends_on:
      # The db container needs to be started before we start this container
      - db
      - rabbitmq
    command: sh ./script.sh
    networks:
      - app-tier
  db:
    # We use the predefined Postgres image
    image: postgres:9.6
    restart: always
    environment:
      # Set user/password for Postgres
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      # Set a path where Postgres should store the data
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - 5432:5432
    networks:
      - app-tier
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
      - 15671:15671
      - 15692:15692
    networks:
      - app-tier
    depends_on:
      - db
#Define the networks
networks:
  app-tier:
    driver: bridge
# Define the volumes
volumes:
  pgdata: {}  
  api: {}
  microservice_1: {}
  microservice_2: {}
  rabbitmq: {}